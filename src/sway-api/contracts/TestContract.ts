/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.101.2
  Forc version: 0.68.7
  Fuel-Core version: 0.43.1
*/

import { Contract as __Contract, Interface } from "fuels";
import type {
  Provider,
  Account,
  StorageSlot,
  Address,
  BigNumberish,
  BN,
  FunctionFragment,
  InvokeFunction,
} from 'fuels';

const abi = {
  "programType": "contract",
  "specVersion": "1",
  "encodingVersion": "1",
  "concreteTypes": [
    {
      "type": "u64",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
    }
  ],
  "metadataTypes": [],
  "functions": [
    {
      "name": "get_count",
      "inputs": [],
      "output": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "name": "increment_counter",
      "inputs": [
        {
          "name": "amount",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "output": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "write",
            "read"
          ]
        }
      ]
    }
  ],
  "loggedTypes": [],
  "messagesTypes": [],
  "configurables": [],
  "errorCodes": {}
};

const storageSlots: StorageSlot[] = [
  {
    "key": "cbf93a9497b1d9a9fa1e5a4c96595c511ddd6d9aef9c1e485177a4834998f371",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  }
];

export class TestContractInterface extends Interface {
  constructor() {
    super(abi);
  }

  declare functions: {
    get_count: FunctionFragment;
    increment_counter: FunctionFragment;
  };
}

export class TestContract extends __Contract {
  static readonly abi = abi;
  static readonly storageSlots = storageSlots;

  declare interface: TestContractInterface;
  declare functions: {
    get_count: InvokeFunction<[], BN>;
    increment_counter: InvokeFunction<[amount: BigNumberish], BN>;
  };

  constructor(
    id: string | Address,
    accountOrProvider: Account | Provider,
  ) {
    super(id, abi, accountOrProvider);
  }
}
